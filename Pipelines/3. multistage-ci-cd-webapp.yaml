trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

stages:
  - stage: build
    jobs: 
      - job:
        steps:
        - task: UseDotNet@2
          displayName: 'Install .NET Core SDK'
          inputs:
            version: 6.x
            performMultiLevelLookup: true
            includePreviewVersions: true # Required for preview versions

        - task: DotNetCoreCLI@2
          inputs:
            command: 'restore'
            projects: '**/*.csproj'
            feedsToUse: 'select'
            
        - task: DotNetCoreCLI@2
          displayName: 'dotnet build $(buildConfiguration)'
          inputs:
            command: 'build'
            projects: '**/*.csproj'
            arguments: '--configuration $(buildConfiguration)'

        - task: DotNetCoreCLI@2
          inputs:
            command: publish
            publishWebProjects: True
            arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
            zipAfterPublish: True

        # this code takes all the files in $(Build.ArtifactStagingDirectory) and uploads them as an artifact of your build.
        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: '$(Build.ArtifactStagingDirectory)' 
            artifactName: 'webappartifact'  

        - task: CmdLine@2
          displayName: "CmdLine Task: Run a command line script using Bash on Linux and macOS and cmd.exe on Windows."
          inputs:
            script: |         
              echo "Build.ArtifactStagingDirectory:" 
              echo "$(Build.ArtifactStagingDirectory)"
    
              echo "Build.BinariesDirectory:" 
              echo "$(Build.BinariesDirectory)"
    
              echo "Build.SourcesDirectory:"
              echo "$(Build.SourcesDirectory)"

              echo  "System.DefaultWorkingDirectory:"
              echo  "$(System.DefaultWorkingDirectory)"

              echo  "Pipeline.Workspace:"
              echo  "$(Pipeline.Workspace)"

              echo "Structure of work folder of this pipeline:"
              tree $(Build.ArtifactStagingDirectory)

  - stage: deploy
    jobs: 
    - job:
      steps:
        - task: AzureWebApp@1
          displayName: Azure Web App Deploy
          inputs:
            azureSubscription: 'svc-connection'
            appType: 'webApp'
            appName: 'samplewebapp89'
            package: '$(Build.ArtifactStagingDirectory)\webappartifact\*.zip'
